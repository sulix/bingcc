#!/bin/bash

if [ -f /etc/debian_version ] ; then
	LIBCPATH="/lib/x86_64-linux-gnu/libc.so.6 /lib/x86_64-linux-gnu/libm.so.6 /lib/x86_64-linux-gnu/librt.so.1"
	LIBC32PATH="/lib/i386-linux-gnu/libc.so.6 /lib/i386-linux-gnu/libm.so.6 /lib/i386-linux-gnu/librt.so.1"
elif [ -f /etc/fedora-release ] ; then
	LIBCPATH="/lib64/libc.so.6 /lib64/libm.so.6 /lib64/librt.so.1"
	LIBC32PATH="/lib/libc.so.6 /lib/libm.so.6 /lib/librt.so.1"
elif [ -f /etc/redhat-release ] ; then
	# Red Hat / CentOS / Sci Linux are the same as fedora
	LIBCPATH="/lib64/libc.so.6 /lib64/libm.so.6 /lib/librt.so.1"
	LIBC32PATH="/lib/libc.so.6 /lib/libm.so.6 /lib/librt.so.1"
elif [ -e /etc/os-release ] ; then
	. /etc/os-release
	if [[ "$ID_LIKE" = *"suse"* ]] ; then
		LIBCPATH="/lib64/libc.so.6 /lib64/libm.so.6 /lib/librt.so.1"
		LIBC32PATH="/lib/libc.so.6 /lib/libm.so.6 /lib/librt.so.1"
	else
		echo "Could not find settings for your distro (${ID_LIKE})."
		exit 1
	fi
else
	echo "Could not find settings for your distro!"
	exit 1
fi

if [ -z $1 ]
then
	libcver="2.14"
else
	libcver=$1
fi

#if [ -z $2 ]
#then
#	stdcppver="3.4.11"
#else
#	stdcppver=$2
#fi

echo "Generating files for glibc $libcver (native) ..."

./gensymoverride GLIBC "$libcver" $LIBCPATH > glibc_ver.h 

echo "Generating files for glibc $libcver (32-bit) ..."

./gensymoverride GLIBC "$libcver" $LIBC32PATH > glibc_ver32.h 

#echo "Generating files for libstdc++ $stdcppver ..."

#./gensymoverride GLIBCXX "$stdcppver" /lib/*.so.* /usr/lib/*.so.* > stdcpp_ver.h

echo "Done!"

